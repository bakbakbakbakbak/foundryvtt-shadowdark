{"name":"Generate Random Magic Item Name","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/equipment/neck/pendant-faceted-silver-green.webp","command":"// Macro to draw and construct a named Magic Item, being sent in a whisper to GMs on the server.\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst firstTableID = pack.index.find(o => o.name === \"Magic Item: Name 1\")._id;\nconst firstTable = await pack.getDocument(firstTableID);\nconst firstResult = await firstTable.draw({displayChat: false});\nconst first = firstResult.results.pop().getChatText();\n\nconst secondTableID = pack.index.find(o => o.name === \"Magic Item: Name 2\")._id;\nconst secondTable = await pack.getDocument(secondTableID);\nconst secondResult = await secondTable.draw({displayChat: false});\nconst second = secondResult.results.pop().getChatText();\n\nconst thirdTableID = pack.index.find(o => o.name === \"Magic Item: Name 3\")._id;\nconst thirdTable = await pack.getDocument(thirdTableID);\nconst thirdResult = await thirdTable.draw({displayChat: false});\nconst third = thirdResult.results.pop().getChatText();\n\nconst message = `<p><b>${first} ${second} ${third}</b></p>`;\n\nconst chatData = {\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker(),\n  content: message,\n  whisper: game.users.filter(u => u.isGM).map(u => u._id),\n};\n\nChatMessage.create(chatData, {});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.RIrdEmo0nwA37WyT"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679296071412,"modifiedTime":1679296168796,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"4j286mEmWbt6maGk"}
{"name":"Draw Rumor","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/environment/people/commoner.webp","command":"// Macro to draw a rumors and only show it to the GM.\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst tableID = pack.index.find(o => o.name === \"Rumors\")._id;\nconst table = await pack.getDocument(tableID);\nawait table.draw({ rollMode: CONST.DICE_ROLL_MODES.PRIVATE});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.nMFsp1aA3r3DY6xq"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679220549339,"modifiedTime":1679220622805,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"7uF6dXPvaJNKZAM6"}
{"name":"Draw Trap","type":"script","author":"EKVggA45fx6fzkCK","img":"icons/environment/traps/trap-jaw-green.webp","scope":"global","command":"const pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst trapTableID = pack.index.find(o => o.name === \"Trap: Trap\")._id;\nconst trapTable = await pack.getDocument(trapTableID);\nconst trapResult = await trapTable.draw({displayChat: false});\nconst trap = trapResult.results.pop().getChatText();\n\nconst triggerTableID = pack.index.find(o => o.name === \"Trap: Trigger\")._id;\nconst triggerTable = await pack.getDocument(triggerTableID);\nconst triggerResult = await triggerTable.draw({displayChat: false});\nconst trigger = triggerResult.results.pop().getChatText();\n\nconst effectTableID = pack.index.find(o => o.name === \"Trap: Damage or Effect\")._id;\nconst effectTable = await pack.getDocument(effectTableID);\nconst effectResult = await effectTable.draw({displayChat: false});\nconst effect = effectResult.results.pop().getChatText();\n\nconst message = `<p>A <b>${trap}</b> trap that is triggered by <b>${trigger}</b> \n  that causes <b>${effect}</b></p>`;\n\nconst chatData = {\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker(),\n  content: message,\n  whisper: game.users.filter(u => u.isGM).map(u => u._id),\n};\n\nChatMessage.create(chatData, {});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.cjt1zht61fuzGH0i"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679217237815,"modifiedTime":1679218836910,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"B4UwIKe2sBuhSHfs"}
{"name":"The Lost Citadel: Random Encounter Check","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/creatures/unholy/demons-horned-glowing-pink.webp","command":"// Macro to draw for encounter in The Lost Citadel and only show it to the GM.\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst tableID = pack.index.find(o => o.name === \"The Lost Citadel: Random Encounter Check\")._id;\nconst table = await pack.getDocument(tableID);\nawait table.draw({ rollMode: CONST.DICE_ROLL_MODES.PRIVATE});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.FhoSe3L8mU7NUg8S"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679224316438,"modifiedTime":1679224668057,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"C0TN1X2LOAPYWJmD"}
{"name":"Roll Random Ettercap NPC","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/creatures/unholy/demon-winged-cyclops-drooling.webp","command":"// Macro to create a random NPC, being sent in a whisper to GMs on the server.\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst namesTableID = pack.index.find(o => o.name === \"The Lost Citadel: Ettercap Names\")._id;\nconst namesTable = await pack.getDocument(namesTableID);\nconst namesResult = await namesTable.draw({displayChat: false});\nconst names = namesResult.results.pop().getChatText();\n\nconst appearanceTableID = pack.index.find(o => o.name === \"The Lost Citadel: Ettercap Appearances\")._id;\nconst appearanceTable = await pack.getDocument(appearanceTableID);\nconst appearanceResult = await appearanceTable.draw({displayChat: false});\nconst appearance = appearanceResult.results.pop().getChatText();\n\nconst behaviorTableID = pack.index.find(o => o.name === \"The Lost Citadel: Ettercap Behaviors\")._id;\nconst behaviorTable = await pack.getDocument(behaviorTableID);\nconst behaviorResult = await behaviorTable.draw({displayChat: false});\nconst behavior = behaviorResult.results.pop().getChatText();\n\nconst message = `<p>A <b>${appearance}</b> Ettercap named <b>${names}</b> \nis <b>${behavior}</b>.</p>`;\n\nconst chatData = {\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker(),\n  content: message,\n  whisper: game.users.filter(u => u.isGM).map(u => u._id),\n};\n\nChatMessage.create(chatData, {});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.PZwIy632EjEaQwzO"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679228806586,"modifiedTime":1679228875976,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"EropDDFL0DKcW8I6"}
{"name":"Draw Ruin Encounter","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/environment/wilderness/wall-ruins.webp","command":"// Macro to draw a ruin encounter and only show it to the GM.\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst tableID = pack.index.find(o => o.name === \"Ruin Encounters\")._id;\nconst table = await pack.getDocument(tableID);\nawait table.draw({ rollMode: CONST.DICE_ROLL_MODES.PRIVATE});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.TzdXiZT4I3XOTi2h"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679220653370,"modifiedTime":1679220684423,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"FNPtH7pEbjesVQlL"}
{"name":"Random Adventuring Site Name","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/environment/wilderness/cave-entrance.webp","command":"// Macro to generate a random name for an adventure site, only shown to the GM(s).\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst nameoneTableID = pack.index.find(o => o.name === \"Adventuring Site Name: Name 1\")._id;\nconst nameoneTable = await pack.getDocument(nameoneTableID);\nconst nameoneResult = await nameoneTable.draw({displayChat: false});\nconst nameone = nameoneResult.results.pop().getChatText();\n\nconst nametwoTableID = pack.index.find(o => o.name === \"Adventuring Site Name: Name 2\")._id;\nconst nametwoTable = await pack.getDocument(nametwoTableID);\nconst nametwoResult = await nametwoTable.draw({displayChat: false});\nconst nametwo = nametwoResult.results.pop().getChatText();\n\nconst namethreeTableID = pack.index.find(o => o.name === \"Adventuring Site Name: Name 3\")._id;\nconst namethreeTable = await pack.getDocument(namethreeTableID);\nconst namethreeResult = await namethreeTable.draw({displayChat: false});\nconst namethree = namethreeResult.results.pop().getChatText();\n\nconst message = `<h3>${nameone} ${nametwo} ${namethree}</3>`;\n\nconst chatData = {\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker(),\n  content: message,\n  whisper: game.users.filter(u => u.isGM).map(u => u._id),\n};\n\nChatMessage.create(chatData, {});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.3Ql21Njzj6Jh3uil"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679229436526,"modifiedTime":1679229476073,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"J3wuYxC7NYPBvowe"}
{"name":"Draw Something Happens!","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/environment/wilderness/cave-entrance-dwarven-hill.webp","command":"// Macro to draw on the Somethings Happens! table and only show it to the GM.\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst tableID = pack.index.find(o => o.name === \"Something Happens!\")._id;\nconst table = await pack.getDocument(tableID);\nawait table.draw({ rollMode: CONST.DICE_ROLL_MODES.PRIVATE});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.xF0pBEdiw6Ry25N0"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679220625994,"modifiedTime":1679220650825,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"UOyL6BA8rrpVGhgL"}
{"name":"Light Tracker UI Toggle (GM Only)","type":"script","scope":"global","author":"EjRYV38yldItTITy","img":"icons/tools/navigation/hourglass-grey.webp","command":"// This toggles the Light Source Tracker interface on/off.\n//\n// Only available to users with the Game Master role.\n//\ngame.shadowdark.lightSourceTracker.toggleInterface();","flags":{"core":{"sourceId":"Macro.SEh88OBTmU29lKPV"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1678988401175,"modifiedTime":1679067739305,"lastModifiedBy":"EjRYV38yldItTITy"},"folder":null,"sort":0,"ownership":{"default":0,"EjRYV38yldItTITy":3},"_id":"VgfWt2xWzYJyVMbA"}
{"name":"Draw Hazard","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/environment/wilderness/terrain-stone-stalagtite.webp","command":"// Macro to draw and construct a hazard, being sent in a whisper to GMs on the server.\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst movementTableID = pack.index.find(o => o.name === \"Hazard: Movement\")._id;\nconst movementTable = await pack.getDocument(movementTableID);\nconst movementResult = await movementTable.draw({displayChat: false});\nconst movement = movementResult.results.pop().getChatText();\n\nconst damageTableID = pack.index.find(o => o.name === \"Hazard: Damage\")._id;\nconst damageTable = await pack.getDocument(damageTableID);\nconst damageResult = await damageTable.draw({displayChat: false});\nconst damage = damageResult.results.pop().getChatText();\n\nconst weakenTableID = pack.index.find(o => o.name === \"Hazard: Weaken\")._id;\nconst weakenTable = await pack.getDocument(weakenTableID);\nconst weakenResult = await weakenTable.draw({displayChat: false});\nconst weaken = weakenResult.results.pop().getChatText();\n\nconst message = `<p>A location with <b>${movement}</b> \nthat will weaken the characters with <b>${weaken}</b> \nand causes damage through <b>${damage}</b></p>`;\n\nconst chatData = {\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker(),\n  content: message,\n  whisper: game.users.filter(u => u.isGM).map(u => u._id),\n};\n\nChatMessage.create(chatData, {});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.RDU5rVxws2bnVMjF"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679218799258,"modifiedTime":1679219320999,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"jS2NVcdDJraaMbDd"}
{"name":"Random Encounter Info","type":"script","author":"EKVggA45fx6fzkCK","img":"icons/environment/people/charge.webp","scope":"global","command":"// Macro to get some information on random encounters\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nif (!actor || (actor.type === \"NPC\")) ui.notifications.warn(\"Can't draw from reactions without a Player actor assigned/selected!\");\n\n// Starting Distance\nconst distanceTableID = pack.index.find(o => o.name === \"Random Encounter: Distance\")._id;\nconst distanceTable = await pack.getDocument(distanceTableID);\nconst distanceResult = await distanceTable.roll();\nconst distance = distanceResult.results[0].text;\n\n// Activity\nconst activityTableID = pack.index.find(o => o.name === \"Random Encounter: Activity\")._id;\nconst activityTable = await pack.getDocument(activityTableID);\nconst activityResult = await activityTable.roll();\nconst activity = activityResult.results[0].text;\n\n\n// Reaction\nconst reactionTableID = pack.index.find(o => o.name === \"Random Encounter: Reaction\")._id;\nconst reactionTable = await pack.getDocument(reactionTableID);\nconst actorCha = actor.system.abilities.cha.mod;\nconst reactionRoll = await new Roll(`2d6 + ${actorCha}`).evaluate({async: true});\nconst reaction = reactionTable.getResultsForRoll(reactionRoll._total)[0].text;\n\n\n// Treasure\nconst treasureRoll = await new Roll(\"1d100\").evaluate({ async: true });\nconst treasure = (treasureRoll._total >= 50) ? \"have treasure\" : \"have no treasure\";\nconsole.log(treasure);\n\n\nconst chatHtml = `\n<div class=\"shadowdark chat-card item-card\">\n\t<header class=\"card-header flexrow\">\n\t\t<img src=\"icons/environment/people/charge.webp\" />\n\t\t<h3>Random Encounter!</h3>\n\t</header>\n\n\t<div class=\"card-content\">\n\t\t<p>The monster(s) that <em>${actor.name}</em> has run into are...</p>\n\t\t<p>At a distance of: <b>${distance}</b></p>\n\t\t<p>Currently doing: <b>${activity}</b></p>\n\t\t<p>And their reaction is: <b>${reaction}</b></p>\n\t\t<p>They <b>${treasure}</b></p>\n\t</div>\n</div>\n`;\n\nconst chatData = {\n\tuser: game.user._id,\n\tspeaker: ChatMessage.getSpeaker(),\n\tcontent: chatHtml,\n  whisper: game.users.filter(u => u.isGM).map(u => u._id),\n};\n\nChatMessage.create(chatData, {});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.pxk6biSoLZBsZcku"}},"_stats":{"systemId":"shadowdark","systemVersion":"1.2.4","coreVersion":"10.291","createdTime":1682185146093,"modifiedTime":1682187049076,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"phlDVz1PAQLxZU0O"}
{"name":"Roll Random Beastmen NPC","type":"script","scope":"global","author":"EKVggA45fx6fzkCK","img":"icons/environment/creatures/gargoyle-grey-blue.webp","command":"// Macro to create a random NPC, being sent in a whisper to GMs on the server.\n\nconst pack = game.packs.get(\"shadowdark.rollable-tables\");\n\nconst namesTableID = pack.index.find(o => o.name === \"The Lost Citadel: Beastmen Names\")._id;\nconst namesTable = await pack.getDocument(namesTableID);\nconst namesResult = await namesTable.draw({displayChat: false});\nconst names = namesResult.results.pop().getChatText();\n\nconst appearanceTableID = pack.index.find(o => o.name === \"The Lost Citadel: Beastmen Appearances\")._id;\nconst appearanceTable = await pack.getDocument(appearanceTableID);\nconst appearanceResult = await appearanceTable.draw({displayChat: false});\nconst appearance = appearanceResult.results.pop().getChatText();\n\nconst behaviorTableID = pack.index.find(o => o.name === \"The Lost Citadel: Beastmen Behaviors\")._id;\nconst behaviorTable = await pack.getDocument(behaviorTableID);\nconst behaviorResult = await behaviorTable.draw({displayChat: false});\nconst behavior = behaviorResult.results.pop().getChatText();\n\nconst message = `<p>A <b>${appearance}</b> Beastman named <b>${names}</b> \nis <b>${behavior}</b>.</p>`;\n\nconst chatData = {\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker(),\n  content: message,\n  whisper: game.users.filter(u => u.isGM).map(u => u._id),\n};\n\nChatMessage.create(chatData, {});","ownership":{"default":0,"EKVggA45fx6fzkCK":3},"flags":{"core":{"sourceId":"Macro.UniJEcpooNtvqWSw"}},"_stats":{"systemId":"shadowdark","systemVersion":"0.1.0","coreVersion":"10.291","createdTime":1679218799258,"modifiedTime":1679228874622,"lastModifiedBy":"EKVggA45fx6fzkCK"},"folder":null,"sort":0,"_id":"zNYDtS7XcT3IaQ4t"}
